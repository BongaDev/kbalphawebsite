/**
 * @fileoverview added by tsickle
 * Generated from: src/lottie.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { __extends } from "tslib";
import { Component, ChangeDetectionStrategy, Input, Inject, ElementRef, ViewChild, Self, PLATFORM_ID, } from '@angular/core';
import { BaseDirective } from './base.directive';
import { AnimationLoader } from './animation-loader';
import { LottieEventsFacade } from './events-facade';
var LottieComponent = /** @class */ (function (_super) {
    __extends(LottieComponent, _super);
    function LottieComponent(platformId, eventsFacade, animationLoader) {
        var _this = _super.call(this, platformId, animationLoader) || this;
        _this.eventsFacade = eventsFacade;
        _this.width = null;
        _this.height = null;
        _this.container = (/** @type {?} */ (null));
        return _this;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    LottieComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        _super.prototype.loadAnimation.call(this, changes, this.container.nativeElement, this.eventsFacade, this);
    };
    LottieComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ng-lottie',
                    template: "\n    <div\n      #container\n      [style.width]=\"width || '100%'\"\n      [style.height]=\"height || '100%'\"\n      [ngStyle]=\"styles\"\n      [ngClass]=\"containerClass\"\n    ></div>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [LottieEventsFacade]
                }] }
    ];
    /** @nocollapse */
    LottieComponent.ctorParameters = function () { return [
        { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },
        { type: LottieEventsFacade, decorators: [{ type: Self }] },
        { type: AnimationLoader }
    ]; };
    LottieComponent.propDecorators = {
        width: [{ type: Input }],
        height: [{ type: Input }],
        container: [{ type: ViewChild, args: ['container', { static: true },] }]
    };
    return LottieComponent;
}(BaseDirective));
export { LottieComponent };
if (false) {
    /** @type {?} */
    LottieComponent.prototype.width;
    /** @type {?} */
    LottieComponent.prototype.height;
    /** @type {?} */
    LottieComponent.prototype.container;
    /**
     * @type {?}
     * @private
     */
    LottieComponent.prototype.eventsFacade;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG90dGllLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1sb3R0aWUvIiwic291cmNlcyI6WyJzcmMvbG90dGllLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULHVCQUF1QixFQUN2QixLQUFLLEVBQ0wsTUFBTSxFQUNOLFVBQVUsRUFDVixTQUFTLEVBQ1QsSUFBSSxFQUNKLFdBQVcsR0FHWixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDakQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRXJEO0lBY3FDLG1DQUFhO0lBTWhELHlCQUN1QixVQUFrQixFQUN2QixZQUFnQyxFQUNoRCxlQUFnQztRQUhsQyxZQUtFLGtCQUFNLFVBQVUsRUFBRSxlQUFlLENBQUMsU0FDbkM7UUFKaUIsa0JBQVksR0FBWixZQUFZLENBQW9CO1FBUHpDLFdBQUssR0FBa0IsSUFBSSxDQUFDO1FBQzVCLFlBQU0sR0FBa0IsSUFBSSxDQUFDO1FBRUksZUFBUyxHQUE0QixtQkFBQSxJQUFJLEVBQUMsQ0FBQzs7SUFRckYsQ0FBQzs7Ozs7SUFFRCxxQ0FBVzs7OztJQUFYLFVBQVksT0FBc0I7UUFDaEMsaUJBQU0sYUFBYSxZQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3RGLENBQUM7O2dCQTlCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLFdBQVc7b0JBQ3JCLFFBQVEsRUFBRSxtTUFRVDtvQkFDRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsU0FBUyxFQUFFLENBQUMsa0JBQWtCLENBQUM7aUJBQ2hDOzs7OzZDQVFJLE1BQU0sU0FBQyxXQUFXO2dCQXZCZCxrQkFBa0IsdUJBd0J0QixJQUFJO2dCQXpCQSxlQUFlOzs7d0JBa0JyQixLQUFLO3lCQUNMLEtBQUs7NEJBRUwsU0FBUyxTQUFDLFdBQVcsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7O0lBYTFDLHNCQUFDO0NBQUEsQUEvQkQsQ0FjcUMsYUFBYSxHQWlCakQ7U0FqQlksZUFBZTs7O0lBQzFCLGdDQUFxQzs7SUFDckMsaUNBQXNDOztJQUV0QyxvQ0FBcUY7Ozs7O0lBSW5GLHVDQUFnRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIElucHV0LFxuICBJbmplY3QsXG4gIEVsZW1lbnRSZWYsXG4gIFZpZXdDaGlsZCxcbiAgU2VsZixcbiAgUExBVEZPUk1fSUQsXG4gIE9uQ2hhbmdlcyxcbiAgU2ltcGxlQ2hhbmdlcyxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IEJhc2VEaXJlY3RpdmUgfSBmcm9tICcuL2Jhc2UuZGlyZWN0aXZlJztcbmltcG9ydCB7IEFuaW1hdGlvbkxvYWRlciB9IGZyb20gJy4vYW5pbWF0aW9uLWxvYWRlcic7XG5pbXBvcnQgeyBMb3R0aWVFdmVudHNGYWNhZGUgfSBmcm9tICcuL2V2ZW50cy1mYWNhZGUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduZy1sb3R0aWUnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXZcbiAgICAgICNjb250YWluZXJcbiAgICAgIFtzdHlsZS53aWR0aF09XCJ3aWR0aCB8fCAnMTAwJSdcIlxuICAgICAgW3N0eWxlLmhlaWdodF09XCJoZWlnaHQgfHwgJzEwMCUnXCJcbiAgICAgIFtuZ1N0eWxlXT1cInN0eWxlc1wiXG4gICAgICBbbmdDbGFzc109XCJjb250YWluZXJDbGFzc1wiXG4gICAgPjwvZGl2PlxuICBgLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgcHJvdmlkZXJzOiBbTG90dGllRXZlbnRzRmFjYWRlXSxcbn0pXG5leHBvcnQgY2xhc3MgTG90dGllQ29tcG9uZW50IGV4dGVuZHMgQmFzZURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIHdpZHRoOiBzdHJpbmcgfCBudWxsID0gbnVsbDtcbiAgQElucHV0KCkgaGVpZ2h0OiBzdHJpbmcgfCBudWxsID0gbnVsbDtcblxuICBAVmlld0NoaWxkKCdjb250YWluZXInLCB7IHN0YXRpYzogdHJ1ZSB9KSBjb250YWluZXI6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+ID0gbnVsbCE7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQEluamVjdChQTEFURk9STV9JRCkgcGxhdGZvcm1JZDogc3RyaW5nLFxuICAgIEBTZWxmKCkgcHJpdmF0ZSBldmVudHNGYWNhZGU6IExvdHRpZUV2ZW50c0ZhY2FkZSxcbiAgICBhbmltYXRpb25Mb2FkZXI6IEFuaW1hdGlvbkxvYWRlcixcbiAgKSB7XG4gICAgc3VwZXIocGxhdGZvcm1JZCwgYW5pbWF0aW9uTG9hZGVyKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICBzdXBlci5sb2FkQW5pbWF0aW9uKGNoYW5nZXMsIHRoaXMuY29udGFpbmVyLm5hdGl2ZUVsZW1lbnQsIHRoaXMuZXZlbnRzRmFjYWRlLCB0aGlzKTtcbiAgfVxufVxuIl19